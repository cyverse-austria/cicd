apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: k8s-resources-task
spec:
  description: >-
    These tasks will proform k8s-resources commands
  params:
    - name: BASE_IMAGE
      description: "Base image that has Helm, Kubectl, gomplate & skaffold installed."
      default: "mbwali/k8s-resources:latest"
    - name: COMMAND
      type: string
      description: Command to run. (required)
      default: kubectl get nodes
    - name: ENV
      type: string
      description: ENV to run on. (required)
      default: qa
    - name: PROJECTS
      type: array
      description: List of projects
      default: []
  workspaces:
  - name: k8sdata
    description: Holds the cloned helm chart repository.
  steps:
    - name: generate-load
      workingDir: $(workspaces.k8sdata.path)
      image: $(params.BASE_IMAGE)
      imagePullPolicy: Always
      securityContext:
        runAsUser: 0
      script: |
        #!/bin/bash
        echo -e "\033[1;33m Check versions...  \e[0m"
        whoami
        ls
        gomplate --help
        kubectl version
        echo -e "\033[1;33m ENV is $(params.ENV)...  \e[0m"
        echo -e "\033[1;33m Generate and load config/secrets \e[0m"
        ./generate_configs.py -e $(params.ENV)
        ./generate_secrets.py -e $(params.ENV)
        ./load_configs.py -e $(params.ENV) -n $(params.ENV) 
        ./load_secrets.py -e $(params.ENV) -n $(params.ENV)

    - name: k8s-resources
      workingDir: $(workspaces.k8sdata.path)
      image: $(params.BASE_IMAGE)
      imagePullPolicy: Always
      securityContext:
        runAsUser: 0
      args:
        - "$(params.PROJECTS[*])"
      script: |
        #!/bin/bash
        echo -e "\033[1;33m Deploying Step... \e[0m"
        projects=()
        for arg in "$@"; do
          echo "$arg"
          projects+=("$arg")
        done
        for project in "${projects[@]}"; do
          echo -e "\033[1;33m Deploying $project into the namespace $(params.ENV)... \e[0m"
          ./deploy.py -Bn $(params.ENV) -p $project -C
        done
 

