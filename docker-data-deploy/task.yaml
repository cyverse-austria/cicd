apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: docker-data-task
spec:
  description: >-
    These tasks will proform docker-data commands
  params:
    - name: BASE_IMAGE
      description: "Base image that has Helm, Kubectl, gomplate & skaffold installed."
      default: "mbwali/k8s-resources:latest"
    # - name: REPO_URL
    #   type: string
    #   description: Repository URL to clone from. (required)
    - name: COMMAND
      type: string
      description: Command to run. (required)
      default: kubectl get nodes
    - name: ENV
      type: string
      description: ENV to run on. (required)
      default: qa
  workspaces:
  - name: source
    description: Holds the cloned helm chart repository.
  steps:
    - name: generate-dir
      workingDir: $(workspaces.source.path)
      image: $(params.BASE_IMAGE)
      imagePullPolicy: Always
      securityContext:
        runAsUser: 0
      script: |
        #!/bin/bash
        echo -e "\033[1;33m Check versions...  \e[0m"
        whoami
        ls
        gomplate --help
        echo "Here generate directories if the environment is not PROD. "

        if [ $(params.ENV) != "prod" ]
        then
          echo "The environment is $(params.ENV), creating the directories."
          mkdir -p gpg/$(params.ENV)
          mkdir -p pgpass/$(params.ENV)
        fi

        ls gpg/
        ls pgpass/


    - name: command
      workingDir: $(workspaces.source.path)
      image: $(params.BASE_IMAGE)
      imagePullPolicy: Always
      securityContext:
        runAsUser: 0
      script: |
        #!/bin/bash
        echo -e "\033[1;33m Deploying Step... \e[0m"
        echo "Here run the actual command to generate the secrets..."
        go version
        #go run loadsecrets.go --env $(params.ENV) --namespace $(params.ENV) --envtype de


 

